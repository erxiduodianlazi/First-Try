import redef solve(c):    if re.match(r'R\d+C\d+',c):        r,s = map(int,c[1:].split("C"))        res=''        while s:            s,remainder=divmod(s-1,26)            res=chr(65+remainder)+res        return res+str(r)    else:        pos=0        while not c[pos].isdigit():            pos+=1        r=c[pos:]        s=c[:pos]        t=0        for ch in s:            t=t*26+ord(ch)-64        return f'R{r}C{t}'n=int(input())for _ in range(n):    print(solve(input()))#写了依托都没对哈dic1={"A":1,'B':2,'C':3,'D':4,'E':5,'F':6,'G':7,'H':8,'I':9,'J':10,'K':11,'L':12,'M':13,'N':14,'O':15,'P':16,'Q':17,'R':18,'S':19,'T':20,'U':21,'V':22,'W':23,'X':24,'Y':25,'Z':26}dic2={1:'A',2:'B',3:'C',4:'D',5:'E',6:'F',7:'G',8:'H',9:'I',10:'J',11:'K',12:'L',13:'M',14:'N',15:'M',16:'P',17:'Q',18:'R',19:'S',20:'T',21:'U',22:'V',23:'W',24:'X',25:'Y',26:'Z'}def yi(c):    d=[]    e=[]    num=0    for i in c:        if i in dic1:            d.append(i)        else:            e.append(i)    d.reverse()    num+=dic1[d[0]]    for j in range(1,len(d)):        num+=dic1[d[j]]*(26**j)    print(f"R{''.join(map(str,e))}C{num}")def er(c):    hang=[]    lie=[]    zhuan=[]    for i in range(1,len(c)):        if c[i] not in dic1:            hang.append(c[i])        elif c[i] in dic1:            lie=c[i+1:]            break    lie=int(lie)    while lie>0:        for i in range(1,6):            if lie>26:                if lie//(26**i)==0:                    zhuan.append(dic2[lie//(26**(i-1))])                    lie -= (lie // (26**(i-1))) * (26**(i-1))                    continue            else:                zhuan.append(dic2[lie])                lie=0                break    print(f"{''.join(zhuan)}{''.join(hang)}")t=int(input())for i in range(t):    c=input()    if c[0] =='R' and 'C' in c:        er(c)    else:        yi(c)